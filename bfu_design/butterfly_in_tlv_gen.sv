// Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Signals declared top-level.
//

// For |butterfly1$a.
logic [31:0] BUTTERFLY1_a_a0,
             BUTTERFLY1_a_a1;

// For |butterfly1$addr.
logic [3:0] BUTTERFLY1_addr_a0,
            BUTTERFLY1_addr_a1;

// For |butterfly1$b.
logic [31:0] BUTTERFLY1_b_a0,
             BUTTERFLY1_b_a1;

// For |butterfly1$c.
logic [31:0] BUTTERFLY1_c_a1,
             BUTTERFLY1_c_a2,
             BUTTERFLY1_c_a3,
             BUTTERFLY1_c_a4,
             BUTTERFLY1_c_a5,
             BUTTERFLY1_c_a6,
             BUTTERFLY1_c_a7,
             BUTTERFLY1_c_a8;

// For |butterfly1$ci.
logic [15:0] BUTTERFLY1_ci_a1;

// For |butterfly1$cr.
logic [15:0] BUTTERFLY1_cr_a1;

// For |butterfly1$d.
logic [31:0] BUTTERFLY1_d_a1,
             BUTTERFLY1_d_a2,
             BUTTERFLY1_d_a3,
             BUTTERFLY1_d_a4,
             BUTTERFLY1_d_a5,
             BUTTERFLY1_d_a6,
             BUTTERFLY1_d_a7,
             BUTTERFLY1_d_a8;

// For |butterfly1$di.
logic [15:0] BUTTERFLY1_di_a1;

// For |butterfly1$dr.
logic [15:0] BUTTERFLY1_dr_a1;

// For |butterfly1$w.
logic [31:0] BUTTERFLY1_w_a1;




   //
   // Scope: |butterfly1
   //

      // Staging of $a.
      always_ff @(posedge clk) BUTTERFLY1_a_a1[31:0] <= BUTTERFLY1_a_a0[31:0];

      // Staging of $addr.
      always_ff @(posedge clk) BUTTERFLY1_addr_a1[3:0] <= BUTTERFLY1_addr_a0[3:0];

      // Staging of $b.
      always_ff @(posedge clk) BUTTERFLY1_b_a1[31:0] <= BUTTERFLY1_b_a0[31:0];

      // Staging of $c.
      always_ff @(posedge clk) BUTTERFLY1_c_a2[31:0] <= BUTTERFLY1_c_a1[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a3[31:0] <= BUTTERFLY1_c_a2[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a4[31:0] <= BUTTERFLY1_c_a3[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a5[31:0] <= BUTTERFLY1_c_a4[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a6[31:0] <= BUTTERFLY1_c_a5[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a7[31:0] <= BUTTERFLY1_c_a6[31:0];
      always_ff @(posedge clk) BUTTERFLY1_c_a8[31:0] <= BUTTERFLY1_c_a7[31:0];

      // Staging of $d.
      always_ff @(posedge clk) BUTTERFLY1_d_a2[31:0] <= BUTTERFLY1_d_a1[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a3[31:0] <= BUTTERFLY1_d_a2[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a4[31:0] <= BUTTERFLY1_d_a3[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a5[31:0] <= BUTTERFLY1_d_a4[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a6[31:0] <= BUTTERFLY1_d_a5[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a7[31:0] <= BUTTERFLY1_d_a6[31:0];
      always_ff @(posedge clk) BUTTERFLY1_d_a8[31:0] <= BUTTERFLY1_d_a7[31:0];



